import{AUTH_LOGIN as e,AUTH_LOGOUT as r,AUTH_CHECK as t,AUTH_GET_PERMISSIONS as n}from"react-admin";import a from"firebase";import i from"deep-assign";var o={admin:{path:"/users/",validate:function(){return!0}},keys:{permissions:"user",token:"firebase"},handleAuthStateChange:function(e,r){return new Promise(function(t,n){var i,o;return e?(i=r.admin.path+e.uid,a.database().ref(i).once("value").then(function(i){try{if(void 0!==(o=i.val())&&null!==o&&r.admin.validate(o)){var u;u=e.getIdToken();var s={profile:o,firebaseToken:u};return localStorage.setItem(r.keys.token,u),localStorage.setItem(r.keys.permissions,JSON.stringify(o)),t(s)}return a.auth().signOut(),localStorage.removeItem(r.keys.token),t(Promise.reject(new Error("Oops! You don't seem to be a authorized user")))}catch(e){return n(e)}}.bind(this),n)):(localStorage.removeItem(r.keys.token),u.call(this));function u(){return t()}})}};function u(u){void 0===u&&(u={}),u=i({},o,u);var s=function(){return new Promise(function(e){a.auth().onAuthStateChanged(e)})};return function(i,o){return new Promise(function(c,h){if(i===r)return u.handleAuthStateChange(null,u).then(function(e){try{return c(a.auth().signOut())}catch(e){return h(e)}},h);if(a.auth().currentUser)return a.auth().currentUser.reload().then(function(e){try{return l.call(this)}catch(e){return h(e)}}.bind(this),h);function l(){var r,l;if(i===t)return s().then(function(e){try{return a.auth().currentUser?c(!0):c(Promise.reject(new Error("Oops! You don't seem to be signed in.")))}catch(e){return h(e)}},h);if(i===e){var f,m,d;if(f=(r=o).username,m=r.password,!(d=a.auth().currentUser)){var g=function(){try{return p.call(this)}catch(e){return h(e)}}.bind(this),v=function(e){try{return c(Promise.reject(e))}catch(e){return h(e)}};try{return a.auth().signInWithEmailAndPassword(f,m).then(function(e){try{return d=e,g()}catch(e){return v(e)}},v)}catch(e){v(e)}}function p(){return c(u.handleAuthStateChange(d,u))}return p.call(this)}return i===n?(l=localStorage.getItem(u.keys.permissions),c(l?Promise.resolve(JSON.parse(l)):Promise.reject(new Error("Could not get permissions")))):c(!1)}return l.call(this)})}}export{u as FirebaseAuthProvider};
//# sourceMappingURL=ra-auth-firebase.m.js.map
